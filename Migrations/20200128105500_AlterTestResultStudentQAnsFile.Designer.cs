// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tuexamapi.DAL;

namespace tuexamapi.Migrations
{
    [DbContext(typeof(TuExamContext))]
    [Migration("20200128105500_AlterTestResultStudentQAnsFile")]
    partial class AlterTestResultStudentQAnsFile
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("tuexamapi.Models.AttitudeSetup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttitudeAnsSubType")
                        .HasColumnType("int");

                    b.Property<int>("AttitudeAnsType")
                        .HasColumnType("int");

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<decimal?>("Point1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Point2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Point3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Point4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Point5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Point6")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Point7")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Text1")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Text2")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Text3")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Text4")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Text5")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Text6")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Text7")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TextEn1")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TextEn2")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TextEn3")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TextEn4")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TextEn5")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TextEn6")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TextEn7")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("AttitudeSetups");
                });

            modelBuilder.Entity("tuexamapi.Models.Exam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamCode")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ExamDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("ExamRegisterCnt")
                        .HasColumnType("int");

                    b.Property<int>("ExamTestType")
                        .HasColumnType("int");

                    b.Property<int?>("RegisterCnt")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SubjectGroupID")
                        .HasColumnType("int");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.Property<int?>("TestID")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SubjectGroupID");

                    b.HasIndex("SubjectID");

                    b.HasIndex("TestID");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("tuexamapi.Models.ExamRegister", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamID")
                        .HasColumnType("int");

                    b.Property<int>("ExamRegisterType")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ExamID");

                    b.HasIndex("StudentID");

                    b.ToTable("ExamRegisters");
                });

            modelBuilder.Entity("tuexamapi.Models.ExamSetup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamPeriod")
                        .HasColumnType("int");

                    b.Property<int>("SubjectGroupID")
                        .HasColumnType("int");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.Property<bool>("choosed")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("SubjectGroupID");

                    b.HasIndex("SubjectID");

                    b.ToTable("ExamSetups");
                });

            modelBuilder.Entity("tuexamapi.Models.Faculty", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FacultyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Facultys");
                });

            modelBuilder.Entity("tuexamapi.Models.ImageFile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("ImageFiles");
                });

            modelBuilder.Entity("tuexamapi.Models.LoginStaffHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthType")
                        .HasColumnType("int");

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfLogin")
                        .HasColumnType("int");

                    b.Property<int>("StaffID")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StaffID");

                    b.ToTable("LoginStaffHistorys");
                });

            modelBuilder.Entity("tuexamapi.Models.LoginStudentHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthType")
                        .HasColumnType("int");

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfLogin")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StudentID");

                    b.ToTable("LoginStudentHistorys");
                });

            modelBuilder.Entity("tuexamapi.Models.LoginToken", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("LoginTokens");
                });

            modelBuilder.Entity("tuexamapi.Models.Question", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<int?>("AttitudeAnsSubType")
                        .HasColumnType("int");

                    b.Property<int?>("AttitudeAnsType")
                        .HasColumnType("int");

                    b.Property<int?>("ChildOrder")
                        .HasColumnType("int");

                    b.Property<bool>("CourseEn")
                        .HasColumnType("bit");

                    b.Property<bool>("CourseTh")
                        .HasColumnType("bit");

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("FPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Keyword")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal?>("Point1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Point2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Point3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Point4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Point5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Point6")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Point7")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("QuestionCode")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("QuestionEn")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("QuestionLevel")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionParentID")
                        .HasColumnType("int");

                    b.Property<string>("QuestionTh")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("QuestionType")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SubjectGroupID")
                        .HasColumnType("int");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.Property<int>("SubjectSubID")
                        .HasColumnType("int");

                    b.Property<decimal?>("TPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TimeLimit")
                        .HasColumnType("int");

                    b.Property<int>("TimeLimitType")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("QuestionParentID");

                    b.HasIndex("SubjectGroupID");

                    b.HasIndex("SubjectID");

                    b.HasIndex("SubjectSubID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("tuexamapi.Models.QuestionAns", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerEn")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("AnswerTh")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Choice")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<decimal>("Point")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("QuestionID");

                    b.ToTable("QuestionAnies");
                });

            modelBuilder.Entity("tuexamapi.Models.QuestionAnsChild", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Choice")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<decimal>("Point")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuestionChildID")
                        .HasColumnType("int");

                    b.Property<string>("QuestionEn")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("QuestionTh")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("QuestionChildID");

                    b.ToTable("QuestionAnsChilds");
                });

            modelBuilder.Entity("tuexamapi.Models.QuestionChild", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("QuestionEn")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.Property<string>("QuestionTh")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("QuestionID");

                    b.ToTable("QuestionChilds");
                });

            modelBuilder.Entity("tuexamapi.Models.SendResultSetup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<bool>("Other")
                        .HasColumnType("bit");

                    b.Property<bool>("SendByEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("SendByPost")
                        .HasColumnType("bit");

                    b.Property<int>("SubjectGroupID")
                        .HasColumnType("int");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SubjectGroupID");

                    b.HasIndex("SubjectID");

                    b.ToTable("SendResultSetups");
                });

            modelBuilder.Entity("tuexamapi.Models.Staff", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("IDCard")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("OpenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Passport")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Prefix")
                        .HasColumnType("int");

                    b.Property<string>("StaffCode")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("isMasterAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("isMasterQuestionAppr")
                        .HasColumnType("bit");

                    b.Property<bool>("isMasterTestAppr")
                        .HasColumnType("bit");

                    b.Property<bool>("isQuestionAppr")
                        .HasColumnType("bit");

                    b.Property<bool>("isTestAppr")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("tuexamapi.Models.StaffRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("StaffID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StaffID");

                    b.ToTable("StaffRoles");
                });

            modelBuilder.Entity("tuexamapi.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("Course")
                        .HasColumnType("int");

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("FacultyID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("FirstNameEn")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("IDCard")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("LastNameEn")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Passport")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Prefix")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StudentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FacultyID");

                    b.HasIndex("UserID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("tuexamapi.Models.Subject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SubjectGroupID")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SubjectGroupID");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("tuexamapi.Models.SubjectGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DoExamOrder")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("SubjectGroups");
                });

            modelBuilder.Entity("tuexamapi.Models.SubjectSub", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SubjectID");

                    b.ToTable("SubjectSubs");
                });

            modelBuilder.Entity("tuexamapi.Models.Test", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<int>("Course")
                        .HasColumnType("int");

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("QuestionCnt")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("ShowResult")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SubjectGroupID")
                        .HasColumnType("int");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.Property<string>("TestCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("TestCustomOrderType")
                        .HasColumnType("int");

                    b.Property<int>("TestDoExamType")
                        .HasColumnType("int");

                    b.Property<int>("TestQuestionType")
                        .HasColumnType("int");

                    b.Property<int>("TimeLimit")
                        .HasColumnType("int");

                    b.Property<int>("TimeLimitType")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SubjectGroupID");

                    b.HasIndex("SubjectID");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("tuexamapi.Models.TestApproval", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalCnt")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<int>("ApprovedCnt")
                        .HasColumnType("int");

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndFrom")
                        .HasColumnType("datetime2");

                    b.Property<int>("RejectedCnt")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartFrom")
                        .HasColumnType("datetime2");

                    b.Property<int>("TestID")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("TestID");

                    b.ToTable("TestApprovals");
                });

            modelBuilder.Entity("tuexamapi.Models.TestApprovalStaff", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("StaffID")
                        .HasColumnType("int");

                    b.Property<int>("TestApprovalID")
                        .HasColumnType("int");

                    b.Property<int>("TestApprovalType")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("TestApprovalID");

                    b.ToTable("TestApprovalStaffs");
                });

            modelBuilder.Entity("tuexamapi.Models.TestQCustom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.Property<int>("TestID")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("QuestionID");

                    b.ToTable("TestQCustoms");
                });

            modelBuilder.Entity("tuexamapi.Models.TestQRandom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Easy")
                        .HasColumnType("int");

                    b.Property<int?>("Hard")
                        .HasColumnType("int");

                    b.Property<int?>("Mid")
                        .HasColumnType("int");

                    b.Property<int>("QuestionType")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectSubID")
                        .HasColumnType("int");

                    b.Property<int>("TestID")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VeryEasy")
                        .HasColumnType("int");

                    b.Property<int?>("VeryHard")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SubjectSubID");

                    b.HasIndex("TestID");

                    b.ToTable("TestQRandoms");
                });

            modelBuilder.Entity("tuexamapi.Models.TestResult", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamID")
                        .HasColumnType("int");

                    b.Property<int>("ProveStatus")
                        .HasColumnType("int");

                    b.Property<int?>("ProvedCnt")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ExamID");

                    b.ToTable("TestResults");
                });

            modelBuilder.Entity("tuexamapi.Models.TestResultStudent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("AnsweredCnt")
                        .HasColumnType("int");

                    b.Property<int>("CorrectCnt")
                        .HasColumnType("int");

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("End_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamID")
                        .HasColumnType("int");

                    b.Property<int>("ExamRegisterType")
                        .HasColumnType("int");

                    b.Property<int>("ExamingStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Expriry_On")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Other")
                        .HasColumnType("bit");

                    b.Property<decimal>("Point")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProveStatus")
                        .HasColumnType("int");

                    b.Property<int>("QuestionCnt")
                        .HasColumnType("int");

                    b.Property<bool>("SendByEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("SendByPost")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Start_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("TestID")
                        .HasColumnType("int");

                    b.Property<int>("TestResultID")
                        .HasColumnType("int");

                    b.Property<int?>("TimeRemaining")
                        .HasColumnType("int");

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("WrongCnt")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ExamID");

                    b.HasIndex("StudentID");

                    b.HasIndex("TestID");

                    b.HasIndex("TestResultID");

                    b.ToTable("TestResultStudents");
                });

            modelBuilder.Entity("tuexamapi.Models.TestResultStudentQAns", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Answered")
                        .HasColumnType("bit");

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileAnswerUrl")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("Index")
                        .HasColumnType("int");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionAnsAttitudeID")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionAnsID")
                        .HasColumnType("int");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.Property<bool?>("TFAns")
                        .HasColumnType("bit");

                    b.Property<int>("TestResultStudentID")
                        .HasColumnType("int");

                    b.Property<string>("TextAnswer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("QuestionAnsID");

                    b.HasIndex("QuestionID");

                    b.HasIndex("TestResultStudentID");

                    b.ToTable("TestResultStudentQAnies");
                });

            modelBuilder.Entity("tuexamapi.Models.TestResultStudentQAnsChild", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileAnswerUrl")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("QuestionAnsChildID")
                        .HasColumnType("int");

                    b.Property<int>("QuestionChildID")
                        .HasColumnType("int");

                    b.Property<int>("TestResultStudentQAnsID")
                        .HasColumnType("int");

                    b.Property<string>("TextAnswer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("QuestionAnsChildID");

                    b.HasIndex("QuestionChildID");

                    b.HasIndex("TestResultStudentQAnsID");

                    b.ToTable("TestResultStudentQAnsChilds");
                });

            modelBuilder.Entity("tuexamapi.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Create_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Create_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Update_By")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Update_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("tuexamapi.Models.Exam", b =>
                {
                    b.HasOne("tuexamapi.Models.SubjectGroup", "SubjectGroup")
                        .WithMany()
                        .HasForeignKey("SubjectGroupID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tuexamapi.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tuexamapi.Models.Test", "Test")
                        .WithMany()
                        .HasForeignKey("TestID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("tuexamapi.Models.ExamRegister", b =>
                {
                    b.HasOne("tuexamapi.Models.Exam", "Exam")
                        .WithMany()
                        .HasForeignKey("ExamID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tuexamapi.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.ExamSetup", b =>
                {
                    b.HasOne("tuexamapi.Models.SubjectGroup", "SubjectGroup")
                        .WithMany()
                        .HasForeignKey("SubjectGroupID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tuexamapi.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.LoginStaffHistory", b =>
                {
                    b.HasOne("tuexamapi.Models.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.LoginStudentHistory", b =>
                {
                    b.HasOne("tuexamapi.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.Question", b =>
                {
                    b.HasOne("tuexamapi.Models.Question", "QuestionParent")
                        .WithMany()
                        .HasForeignKey("QuestionParentID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("tuexamapi.Models.SubjectGroup", "SubjectGroup")
                        .WithMany()
                        .HasForeignKey("SubjectGroupID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tuexamapi.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tuexamapi.Models.SubjectSub", "SubjectSub")
                        .WithMany()
                        .HasForeignKey("SubjectSubID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.QuestionAns", b =>
                {
                    b.HasOne("tuexamapi.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.QuestionAnsChild", b =>
                {
                    b.HasOne("tuexamapi.Models.QuestionChild", "QuestionChild")
                        .WithMany()
                        .HasForeignKey("QuestionChildID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.QuestionChild", b =>
                {
                    b.HasOne("tuexamapi.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.SendResultSetup", b =>
                {
                    b.HasOne("tuexamapi.Models.SubjectGroup", "SubjectGroup")
                        .WithMany()
                        .HasForeignKey("SubjectGroupID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tuexamapi.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.Staff", b =>
                {
                    b.HasOne("tuexamapi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.StaffRole", b =>
                {
                    b.HasOne("tuexamapi.Models.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.Student", b =>
                {
                    b.HasOne("tuexamapi.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("tuexamapi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.Subject", b =>
                {
                    b.HasOne("tuexamapi.Models.SubjectGroup", "SubjectGroup")
                        .WithMany()
                        .HasForeignKey("SubjectGroupID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.SubjectSub", b =>
                {
                    b.HasOne("tuexamapi.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.Test", b =>
                {
                    b.HasOne("tuexamapi.Models.SubjectGroup", "SubjectGroup")
                        .WithMany()
                        .HasForeignKey("SubjectGroupID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tuexamapi.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.TestApproval", b =>
                {
                    b.HasOne("tuexamapi.Models.Test", "Test")
                        .WithMany()
                        .HasForeignKey("TestID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.TestApprovalStaff", b =>
                {
                    b.HasOne("tuexamapi.Models.TestApproval", "TestApproval")
                        .WithMany()
                        .HasForeignKey("TestApprovalID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.TestQCustom", b =>
                {
                    b.HasOne("tuexamapi.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.TestQRandom", b =>
                {
                    b.HasOne("tuexamapi.Models.SubjectSub", "SubjectSub")
                        .WithMany()
                        .HasForeignKey("SubjectSubID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("tuexamapi.Models.Test", "Test")
                        .WithMany()
                        .HasForeignKey("TestID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.TestResult", b =>
                {
                    b.HasOne("tuexamapi.Models.Exam", "Exam")
                        .WithMany()
                        .HasForeignKey("ExamID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.TestResultStudent", b =>
                {
                    b.HasOne("tuexamapi.Models.Exam", "Exam")
                        .WithMany()
                        .HasForeignKey("ExamID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tuexamapi.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tuexamapi.Models.Test", "Test")
                        .WithMany()
                        .HasForeignKey("TestID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tuexamapi.Models.TestResult", "TestResult")
                        .WithMany()
                        .HasForeignKey("TestResultID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.TestResultStudentQAns", b =>
                {
                    b.HasOne("tuexamapi.Models.QuestionAns", "QuestionAns")
                        .WithMany()
                        .HasForeignKey("QuestionAnsID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("tuexamapi.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tuexamapi.Models.TestResultStudent", "TestResultStudent")
                        .WithMany()
                        .HasForeignKey("TestResultStudentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("tuexamapi.Models.TestResultStudentQAnsChild", b =>
                {
                    b.HasOne("tuexamapi.Models.QuestionAnsChild", "QuestionAnsChild")
                        .WithMany()
                        .HasForeignKey("QuestionAnsChildID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tuexamapi.Models.QuestionChild", "QuestionChild")
                        .WithMany()
                        .HasForeignKey("QuestionChildID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tuexamapi.Models.TestResultStudentQAns", "TestResultStudentQAns")
                        .WithMany()
                        .HasForeignKey("TestResultStudentQAnsID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
